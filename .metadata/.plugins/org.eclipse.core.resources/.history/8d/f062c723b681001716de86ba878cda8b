package com.tutorials.session2;

import org.springframework.beans.BeansException;
import org.springframework.beans.factory.BeanFactory;
import org.springframework.context.ApplicationContext;
import org.springframework.context.ApplicationContextAware;
import org.springframework.context.support.ClassPathXmlApplicationContext;

//Step 11 - Add application context container access
public class DrawingApp 
	implements ApplicationContextAware{
	
	public static void main(String[] args) {
		
		ApplicationContext appContext =
				new ClassPathXmlApplicationContext("beans.xml");
		  ApplicationContext contextFromHolder =
				    ApplicationContextHolder.getApplicationContext();

		Triangle triangleC =
				(Triangle) appContext.getBean("triangle-alias");//Step 9
		
		//Step 6 - Constructor injection of primitives
		System.out.println("Demo of constructor arguments");
		System.out.println(triangleC.getType());
		System.out.println(triangleC.getHieght());
		
		//Step 7 - Dependency injection of objects
		System.out.println(triangleC.getPointA());
		System.out.println(triangleC.getPointB());
		System.out.println(triangleC.getPointC());
		
		//Step 10 - Dependency injection of list
		System.out.println("Demo 10 - Drawing list of points from collection:");
		triangleC.draw();
	
	}

	public void setApplicationContext(ApplicationContext ac) throws BeansException {
		System.out.println("Demo - Get Application Context");
		Point zeropoint = (Point)ac.getBean("zeropoint");
		System.out.println(zeropoint);
		
		
	}
}
